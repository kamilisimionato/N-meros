import React, { useState } from 'react';
import { StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard } from 'react-native';

export default function App() {
  const [numero, setNumero] = useState('');
  const [mensagem, setMensagem] = useState('');
  const [tentativas, setTentativas] = useState(5);
  const [numeroSorteado, setNumeroSorteado] = useState(Math.floor(Math.random() * 100));
  const [jogoFinalizado, setJogoFinalizado] = useState(false);

  const verificarNumero = () => {
    if (jogoFinalizado) return;
    
    Keyboard.dismiss();
    
    if (numero === '' || isNaN(numero)) {
      setMensagem('Digite um n√∫mero v√°lido!');
      return;
    }

    const num = parseInt(numero);
    if (num < 0 || num > 100) {
      setMensagem('Digite um n√∫mero entre 0 e 100!');
      return;
    }

    const novasTentativas = tentativas - 1;
    setTentativas(novasTentativas);

    if (num === numeroSorteado) {
      setMensagem(`Parab√©ns! Voc√™ encontrou o ovo de P√°scoa ${numeroSorteado}! üéÅ`);
      setJogoFinalizado(true);
    } else if (num > numeroSorteado) {
      setMensagem('O ovo est√° escondido em um n√∫mero MENOR');
    } else {
      setMensagem('O ovo est√° escondido em um n√∫mero MAIOR');
    }

    if (novasTentativas === 0 && num !== numeroSorteado) {
      setMensagem(`Coelhinho fugiu! O ovo era ${numeroSorteado} üêá`);
      setJogoFinalizado(true);
    }

    setNumero('');
  };

  const reiniciarJogo = () => {
    setNumeroSorteado(Math.floor(Math.random() * 100));
    setTentativas(5);
    setMensagem('');
    setJogoFinalizado(false);
    setNumero('');
  };

  return (
    <View style={styles.container}>
      <View style={styles.eggDecorationTop} />
      <Text style={styles.titulo}>Ca√ßa ao Ovo de P√°scoa</Text>
      <Text style={styles.subtitulo}>Encontre o n√∫mero m√°gico (0-100)</Text>
      
      <TextInput
        style={styles.input}
        keyboardType="numeric"
        placeholder="Digite seu palpite"
        placeholderTextColor="#b38b6d"
        value={numero}
        onChangeText={setNumero}
        editable={!jogoFinalizado}
        onSubmitEditing={verificarNumero}
        returnKeyType="done"
      />

      <TouchableOpacity
        style={styles.botao}
        onPress={verificarNumero}
        disabled={jogoFinalizado}
      >
        <Text style={styles.textoBotao}>Procurar Ovo</Text>
      </TouchableOpacity>

      <Text style={styles.mensagem}>{mensagem}</Text>
      
      <View style={styles.tentativasContainer}>
        <Text style={styles.tentativas}>ü•ö Tentativas: {tentativas}</Text>
      </View>

      {jogoFinalizado && (
        <TouchableOpacity style={styles.botaoReiniciar} onPress={reiniciarJogo}>
          <Text style={styles.textoBotaoReiniciar}>Nova Ca√ßada</Text>
        </TouchableOpacity>
      )}
      
      <View style={styles.eggDecorationBottom} />
      <View style={styles.bunnyDecoration}>
        <Text style={styles.bunnyEar} />
        <Text style={styles.bunnyEar} />
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#f9f3e6',
    alignItems: 'center',
    justifyContent: 'center',
    padding: 20,
    position: 'relative',
  },
  eggDecorationTop: {
    position: 'absolute',
    top: 30,
    right: 30,
    width: 60,
    height: 80,
    backgroundColor: '#ffd1dc',
    borderRadius: 30,
    transform: [{ rotate: '15deg' }],
    borderWidth: 2,
    borderColor: '#ff85a2',
  },
  eggDecorationBottom: {
    position: 'absolute',
    bottom: 30,
    left: 30,
    width: 50,
    height: 70,
    backgroundColor: '#c8e6c9',
    borderRadius: 25,
    transform: [{ rotate: '-15deg' }],
    borderWidth: 2,
    borderColor: '#81c784',
  },
  bunnyDecoration: {
    position: 'absolute',
    bottom: 20,
    right: 20,
    width: 60,
    height: 80,
    flexDirection: 'row',
    justifyContent: 'center',
  },
  bunnyEar: {
    width: 15,
    height: 40,
    backgroundColor: '#fff',
    marginHorizontal: 5,
    borderTopLeftRadius: 50,
    borderTopRightRadius: 50,
    borderWidth: 2,
    borderColor: '#ffd1dc',
  },
  titulo: {
    fontSize: 28,
    fontWeight: 'bold',
    marginBottom: 5,
    color: '#e91e63',
    textAlign: 'center',
    textShadowColor: 'rgba(0,0,0,0.1)',
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 2,
  },
  subtitulo: {
    fontSize: 16,
    marginBottom: 30,
    color: '#ff9800',
    fontStyle: 'italic',
  },
  input: {
    height: 50,
    width: '80%',
    borderColor: '#ff9800',
    borderWidth: 2,
    borderRadius: 25,
    paddingHorizontal: 20,
    fontSize: 18,
    backgroundColor: 'rgba(255,255,255,0.8)',
    marginBottom: 25,
    color: '#5d4037',
    textAlign: 'center',
    borderStyle: 'dotted',
  },
  botao: {
    backgroundColor: '#e91e63',
    paddingVertical: 15,
    paddingHorizontal: 40,
    borderRadius: 25,
    marginBottom: 25,
    shadowColor: '#c2185b',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.3,
    shadowRadius: 4,
  },
  textoBotao: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold',
  },
  mensagem: {
    fontSize: 18,
    marginVertical: 10,
    textAlign: 'center',
    color: '#5d4037',
    backgroundColor: 'rgba(255,255,255,0.7)',
    padding: 15,
    borderRadius: 15,
    width: '90%',
    borderLeftWidth: 5,
    borderLeftColor: '#e91e63',
  },
  tentativasContainer: {
    backgroundColor: 'rgba(255,152,0,0.2)',
    padding: 10,
    paddingHorizontal: 20,
    borderRadius: 20,
    marginBottom: 20,
    borderWidth: 1,
    borderColor: '#ff9800',
  },
  tentativas: {
    fontSize: 16,
    color: '#5d4037',
    fontWeight: 'bold',
  },
  botaoReiniciar: {
    backgroundColor: '#ffeb3b',
    paddingVertical: 15,
    paddingHorizontal: 40,
    borderRadius: 25,
    borderWidth: 2,
    borderColor: '#ff9800',
    marginTop: 10,
  },
  textoBotaoReiniciar: {
    color: '#e91e63',
    fontSize: 16,
    fontWeight: 'bold',
  },
});